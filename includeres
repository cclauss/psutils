#!/usr/bin/env python3
import pkg_resources
VERSION = pkg_resources.require('psutils')[0].version
version_banner=f'''\
%(prog)s {VERSION}
Copyright (c) Reuben Thomas 2023.
Released under the GPL version 3, or (at your option) any later version.
'''

from psutils import *

# Command-line arguments
parser = argparse.ArgumentParser(
    description='Include resources in a PostScript document.',
    formatter_class=HelpFormatter,
    usage='%(prog)s [OPTION...] [INFILE [OUTFILE]]',
    add_help=False,
)
parser.add_argument('--help', action='help',
                    help='show this help message and exit')
parser.add_argument('-v', '--version', action='version',
                    version=version_banner)
parser.add_argument('infile', metavar='INFILE', nargs='?',
                    help="`-' or no INFILE argument means standard input")
parser.add_argument('outfile', metavar='OUTFILE', nargs='?',
                    help="`-' or no OUTFILE argument means standard output")
args = parser.parse_intermixed_args()

infile, outfile = setup_input_and_output(args.infile, args.outfile)

# Include resources
for line in infile:
    if line.startswith('%%IncludeResource:'):
        comment, type, *res = line.split()
        name = filename(*res)
        fullname = name
        if not os.path.exists(fullname):
            fullname += extn(type)
        try:
            with open(fullname) as fh:
                outfile.write(fh.read())
        except IOError:
            print(f'%%IncludeResource: {" ".join([type, *res])}', file=outfile)
            warn(f"resource `{name}' not found")
    else:
        outfile.write(line)
